
# mouse changes for tmux 2.1

# start new session if none available when doing tmux a
#new-session

## misc
# set is shorter for set-option

#set -g utf8 on
#set -g status-utf8 on

# mouse
set-option -g mouse on
# for weird middle click thing, see arch wiki
set-option -ga terminal-override ',rxvt-uni*:XT:Ms=\E]52;%p1%s;%p2%s\007'
#bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e; send-keys -M'"
bind -T root WheelUpPane   if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"

set -s escape-time 0

# apparently this forces non-login shell.
set -g default-command bash

#set -g bell-action none

# start window indexing at one instead of zero
set -g base-index 1
set -g history-limit 10000000

set-option -g set-titles on

### appearance

# window number, program name, is active
set-option -g set-titles-string '#H:#S.#I.#P #W #T'
set-window-option -g window-status-attr bright
#set -g default-terminal "screen-256color"
set -g default-terminal "tmux-256color"
#set -g display-time 3000
set -g status-bg '#2e3436'
#set -g status-fg '#8ae234'
#set -g status-fg '#fce94f'
set -g status-fg '#edd400'
set -g status-left ''
set -g status-right '#[fg=white]#S-#H'

# for annoying thing with window sizes
# doesn't really work
setw -g aggressive-resize on

set -g status-interval 5
# support focus events?
set -g focus-events on

#set-window-option -g window-status-current-attr bright,reverse
set-window-option -g window-status-current-attr reverse
#set-window-option -g window-status-current-bg cyan
#set-window-option -g window-status-current-fg black

## environment

# variables to inherit. mostly ros stuff. turns out to not work.
#set -ga update-environment ' PATH CPATH PYTHONPATH PKG_CONFIG_PATH CMAKE_PREFIX_PATH LD_LIBRARY_PATH ROS_ROOT ROS_PACKAGE_PATH ROS_MASTER_URI ROS_PARALLEL_JOBS ROSLISP_PACKAGE_DIRECTORIES ROS_DISTRO ROS_ETC_DIR'

## bindings
unbind C-b
set -g prefix `
bind-key ` send-prefix

# split windows like vim
# but first bind S to choose-session (used to be s)
bind S choose-session
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v
bind v split-window -h

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 4
bind > resize-pane -R 4
bind + resize-pane -D 4
bind - resize-pane -U 4

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# vi-style controls for copy mode
#setw -g mode-keys vi

unbind A
bind A command-prompt "rename-window %%"

unbind q
bind q confirm-before "kill-window"

# alternate
bind a last-window

unbind L # last session
# move window left and right
bind H swap-window -t -1
bind L swap-window -t +1

# reminder: ! to break pane (to window)

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l
